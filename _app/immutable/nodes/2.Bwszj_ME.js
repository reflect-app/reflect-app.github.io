import"../chunks/DsnmJJEf.js";import"../chunks/D9IdMvzg.js";import{c as we,o as ee,e as _,h as ge,s as T}from"../chunks/Do-psofM.js";import{i as J,p as te,g as e,a4 as w,o as k,v as i,x as o,w as r,m,q as se,W as n,aG as H,aH as fe,t as P,b as L,e as R,a6 as me,aI as _e,a5 as ke}from"../chunks/-7_rC7ri.js";import{b as xe,i as $}from"../chunks/QEbw1GTl.js";import{c as Ce,s as V,a as X,p as Z,r as Le,e as $e,M as Ne}from"../chunks/DjiD5ACY.js";import{i as ae}from"../chunks/CIDHElLB.js";import{g as Te}from"../chunks/BXioK_Rr.js";function Ee(v,g,s){var a=v==null?"":""+v;return a=a?a+" "+g:g,a===""?null:a}function Me(v,g,s,a,p,d){var h=v.__className;if(J||h!==s||h===void 0){var c=Ee(s,a);(!J||c!==v.getAttribute("class"))&&(c==null?v.removeAttribute("class"):v.className=c),v.__className=s}return d}var Pe=k('<div class="popup-backdrop svelte-cbyphw" role="dialog" aria-modal="true" aria-labelledby="popup-title" tabindex="-1"><div class="popup-content svelte-cbyphw"><div class="popup-header svelte-cbyphw"><h2 id="popup-title" class="svelte-cbyphw">How Reflect Works</h2> <button class="close-btn svelte-cbyphw" aria-label="Close popup" type="button">&times;</button></div> <div class="popup-body svelte-cbyphw"><div class="section svelte-cbyphw"><h3 class="svelte-cbyphw">📝 Write Your Thoughts</h3> <p class="svelte-cbyphw">Use the text area to write your content in markdown format. Markdown is a simple way to format text with:</p> <ul class="svelte-cbyphw"><li class="svelte-cbyphw"><strong>Headers:</strong> Use # for main headings, ## for subheadings</li> <li class="svelte-cbyphw"><strong>Bold text:</strong> Wrap with ** or __</li> <li class="svelte-cbyphw"><strong>Italic text:</strong> Wrap with * or _</li> <li class="svelte-cbyphw"><strong>Lists:</strong> Use - or * for bullet points</li> <li class="svelte-cbyphw"><strong>Code:</strong> Use ` for inline code or ``` for code blocks</li> <li class="svelte-cbyphw"><strong>Links:</strong> [text](url)</li></ul></div> <div class="section svelte-cbyphw"><h3 class="svelte-cbyphw">🔗 Generate Shareable Link</h3> <p class="svelte-cbyphw">Once you\'ve written your content, click "Generate Link" to create a unique, shareable URL. Your markdown is:</p> <ol class="svelte-cbyphw"><li class="svelte-cbyphw"><strong>Encoded:</strong> Converted to a safe format for URLs</li> <li class="svelte-cbyphw"><strong>Stored:</strong> Embedded directly in the link (no database needed!)</li> <li class="svelte-cbyphw"><strong>Shareable:</strong> Anyone with the link can view your rendered content</li></ol></div> <div class="section svelte-cbyphw"><h3 class="svelte-cbyphw">👀 Preview & Share</h3> <p class="svelte-cbyphw">See a live preview of how your markdown will look when shared. The generated link:</p> <ul class="svelte-cbyphw"><li class="svelte-cbyphw">Works instantly - no waiting for processing</li> <li class="svelte-cbyphw">Is completely private - only those with the link can see it</li> <li class="svelte-cbyphw">Renders beautifully on any device</li> <li class="svelte-cbyphw">Supports all standard markdown features</li></ul></div> <div class="section svelte-cbyphw"><h3 class="svelte-cbyphw">💡 Perfect For</h3> <p class="svelte-cbyphw">Reflect is ideal for sharing:</p> <ul class="svelte-cbyphw"><li class="svelte-cbyphw">Quick thoughts and ideas</li> <li class="svelte-cbyphw">Documentation snippets</li> <li class="svelte-cbyphw">Meeting notes</li> <li class="svelte-cbyphw">Code explanations</li> <li class="svelte-cbyphw">Personal reflections</li> <li class="svelte-cbyphw">Any text you want to format and share</li></ul></div> <div class="section svelte-cbyphw"><h3 class="svelte-cbyphw">🔒 Privacy & Security</h3> <p class="svelte-cbyphw">Your content is never stored on our servers. Everything is:</p> <ul class="svelte-cbyphw"><li class="svelte-cbyphw"><strong>Client-side:</strong> Processed entirely in your browser</li> <li class="svelte-cbyphw"><strong>Link-based:</strong> Content lives only in the URL you share</li> <li class="svelte-cbyphw"><strong>No tracking:</strong> We don\'t collect or store your data</li> <li class="svelte-cbyphw"><strong>Instant:</strong> No accounts or setup required</li></ul></div></div> <div class="popup-footer svelte-cbyphw"><button class="got-it-btn svelte-cbyphw" type="button">Got it!</button></div></div></div>');function Re(v,g){te(g,!1);const s=we();let a=w();ee(()=>{e(a)&&e(a).focus()});function p(){s("close")}function d(u){u.target===u.currentTarget&&p()}function h(u){u.key==="Escape"&&p()}ae();var c=Pe(),x=i(c),C=i(x),b=o(i(C),2);r(C);var E=o(C,4),S=i(E);r(E),r(x),r(c),xe(c,u=>n(a,u),()=>e(a)),_("click",b,p),_("click",S,p),_("click",c,d),_("keydown",c,h),m(v,c),se()}const y={maxCharacters:parseInt("1200"),appName:"Reflect",appDescription:"Share your thoughts in markdown format"};var Se=k('<span class="remaining svelte-179gv78"> </span>'),We=k('<div class="link-section svelte-179gv78"><h3 class="svelte-179gv78">Your shareable link:</h3> <div class="link-container svelte-179gv78"><input type="text" readonly="" class="link-input svelte-179gv78"/> <button class="copy-btn svelte-179gv78">Copy</button></div> <p class="link-info svelte-179gv78">Anyone with this link can view your rendered markdown</p></div>'),Ue=k('<div class="copy-notification svelte-179gv78">✅ Link copied to clipboard!</div>'),Ie=k('<div class="copy-notification fork-notification svelte-179gv78">🔀 Content forked successfully!</div>'),Ae=k('<div class="preview-section svelte-179gv78"><h3 class="svelte-179gv78">Preview:</h3> <div class="preview-content svelte-179gv78"><!></div></div>'),Ge=k('<main class="container svelte-179gv78"><div class="header svelte-179gv78"><div class="logo-container svelte-179gv78"><img src="/logo.png" class="logo svelte-179gv78"/> <h1 class="svelte-179gv78"> </h1></div> <p class="svelte-179gv78"> </p> <button class="learn-more-btn svelte-179gv78">Learn More</button></div> <div class="input-section svelte-179gv78"><div class="input-header svelte-179gv78"><label for="markdown-input" class="svelte-179gv78"> </label> <span> <!></span></div> <textarea id="markdown-input" placeholder="Write your markdown here...  Example: # Hello World This is **bold** and *italic* text. - List item 1 - List item 2" rows="8" class="svelte-179gv78"></textarea> <button class="generate-btn svelte-179gv78">Generate Link</button></div> <!> <!> <!> <!> <!></main>');function Qe(v,g){te(g,!1);let s=w(""),a=w(""),p=w(""),d=w(0),h=w(!1),c=w(!1),x=w(!1),C=w([]);const b=y.maxCharacters;ee(()=>{const t=Te(X);t&&(n(s,t),n(x,!0),setTimeout(()=>{n(x,!1)},3e3),X.set(null))});function E(){if(e(s).trim()){const t=btoa(unescape(encodeURIComponent(e(s))));n(a,`${window.location.origin}/#/view/${t}`),n(p,e(s))}}async function S(){try{await navigator.clipboard.writeText(e(a)),n(h,!0),setTimeout(()=>{n(h,!1)},2e3)}catch(t){console.error("Failed to copy: ",t);const l=document.createElement("textarea");l.value=e(a),document.body.appendChild(l),l.select(),document.execCommand("copy"),document.body.removeChild(l),n(h,!0),setTimeout(()=>{n(h,!1)},2e3)}}H(()=>e(s),()=>{n(d,e(s).length)}),H(()=>(e(s),Z),()=>{n(C,e(s).trim()?Z(e(s)):[])}),H(()=>(e(a),e(p),e(s)),()=>{e(a)&&e(p)&&e(s)!==e(p)&&(n(a,""),n(p,""))}),fe(),ae();var u=Ge();ge(t=>{P(()=>me.title=`${R(y),L(()=>y.appName)??""} - Share Your Thoughts`)});var W=i(u),U=i(W),q=i(U),F=o(q,2),le=i(F,!0);r(F),r(U);var I=o(U,2),oe=i(I,!0);r(I);var ie=o(I,2);r(W);var A=o(W,2),G=i(A),Y=i(G),re=i(Y);r(Y);var D=o(Y,2),B=i(D),ne=o(B);{var ce=t=>{var l=Se(),f=i(l);r(l),P(()=>T(f,`(${b-e(d)} remaining)`)),m(t,l)};$(ne,t=>{e(d)>0&&t(ce)})}r(D),r(G);var M=o(G,2);_e(M);var O=o(M,2);r(A);var K=o(A,2);{var ve=t=>{var l=We(),f=o(i(l),2),N=i(f);Le(N);var ye=o(N,2);r(f),ke(2),r(l),P(()=>$e(N,e(a))),_("click",ye,S),m(t,l)};$(K,t=>{e(a)&&e(s)===e(p)&&t(ve)})}var Q=o(K,2);{var pe=t=>{var l=Ue();m(t,l)};$(Q,t=>{e(h)&&t(pe)})}var j=o(Q,2);{var de=t=>{var l=Ie();m(t,l)};$(j,t=>{e(x)&&t(de)})}var z=o(j,2);{var he=t=>{Re(t,{$$events:{close:()=>n(c,!1)}})};$(z,t=>{e(c)&&t(he)})}var ue=o(z,2);{var be=t=>{var l=Ae(),f=o(i(l),2),N=i(f);Ne(N,{get tokens(){return e(C)}}),r(f),r(l),m(t,l)};$(ue,t=>{e(s),L(()=>e(s).trim())&&t(be)})}r(u),P(t=>{V(q,"alt",`${R(y),L(()=>y.appName)??""} Logo`),T(le,(R(y),L(()=>y.appName))),T(oe,(R(y),L(()=>y.appDescription))),T(re,`Enter your markdown (max ${b??""} characters):`),Me(D,1,`character-count ${e(d)>b?"exceeded":e(d)>b*.8?"warning":""}`,"svelte-179gv78"),T(B,`${e(d)??""}/${b??""} `),V(M,"maxlength",b),O.disabled=t},[()=>(e(s),e(d),L(()=>!e(s).trim()||e(d)>b))]),_("click",ie,()=>n(c,!0)),Ce(M,()=>e(s),t=>n(s,t)),_("click",O,E),m(v,u),se()}export{Qe as component};
