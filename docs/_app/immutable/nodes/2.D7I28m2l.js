import"../chunks/DsnmJJEf.js";import"../chunks/CMD5oM-c.js";import{w as O,p as V,g as e,m as y,i as x,n as i,l as r,o,j as k,k as X,s as c,aE as G,aF as de,t as T,b as _,e as M,$ as he,aG as ue,y as be}from"../chunks/COzCTme7.js";import{c as me,o as ye,e as g,h as we,s as L}from"../chunks/D2AKt8km.js";import{b as fe,i as $}from"../chunks/CWokA5uW.js";import{a as ge,s as Q,p as J,r as _e,c as ke,M as xe}from"../chunks/BHptwQoy.js";import{i as Z}from"../chunks/CreQ_d7O.js";function je(v,w,s){var a=v==null?"":""+v;return a=a?a+" "+w:w,a===""?null:a}function ze(v,w,s,a,p,d){var u=v.__className;if(O||u!==s||u===void 0){var n=je(s,a);(!O||n!==v.getAttribute("class"))&&(n==null?v.removeAttribute("class"):v.className=n),v.__className=s}return d}var Ce=x('<div class="popup-backdrop svelte-cbyphw" role="dialog" aria-modal="true" aria-labelledby="popup-title" tabindex="-1"><div class="popup-content svelte-cbyphw"><div class="popup-header svelte-cbyphw"><h2 id="popup-title" class="svelte-cbyphw">How Reflect Works</h2> <button class="close-btn svelte-cbyphw" aria-label="Close popup" type="button">&times;</button></div> <div class="popup-body svelte-cbyphw"><div class="section svelte-cbyphw"><h3 class="svelte-cbyphw">üìù Write Your Thoughts</h3> <p class="svelte-cbyphw">Use the text area to write your content in markdown format. Markdown is a simple way to format text with:</p> <ul class="svelte-cbyphw"><li class="svelte-cbyphw"><strong>Headers:</strong> Use # for main headings, ## for subheadings</li> <li class="svelte-cbyphw"><strong>Bold text:</strong> Wrap with ** or __</li> <li class="svelte-cbyphw"><strong>Italic text:</strong> Wrap with * or _</li> <li class="svelte-cbyphw"><strong>Lists:</strong> Use - or * for bullet points</li> <li class="svelte-cbyphw"><strong>Code:</strong> Use ` for inline code or ``` for code blocks</li> <li class="svelte-cbyphw"><strong>Links:</strong> [text](url)</li></ul></div> <div class="section svelte-cbyphw"><h3 class="svelte-cbyphw">üîó Generate Shareable Link</h3> <p class="svelte-cbyphw">Once you\'ve written your content, click "Generate Link" to create a unique, shareable URL. Your markdown is:</p> <ol class="svelte-cbyphw"><li class="svelte-cbyphw"><strong>Encoded:</strong> Converted to a safe format for URLs</li> <li class="svelte-cbyphw"><strong>Stored:</strong> Embedded directly in the link (no database needed!)</li> <li class="svelte-cbyphw"><strong>Shareable:</strong> Anyone with the link can view your rendered content</li></ol></div> <div class="section svelte-cbyphw"><h3 class="svelte-cbyphw">üëÄ Preview & Share</h3> <p class="svelte-cbyphw">See a live preview of how your markdown will look when shared. The generated link:</p> <ul class="svelte-cbyphw"><li class="svelte-cbyphw">Works instantly - no waiting for processing</li> <li class="svelte-cbyphw">Is completely private - only those with the link can see it</li> <li class="svelte-cbyphw">Renders beautifully on any device</li> <li class="svelte-cbyphw">Supports all standard markdown features</li></ul></div> <div class="section svelte-cbyphw"><h3 class="svelte-cbyphw">üí° Perfect For</h3> <p class="svelte-cbyphw">Reflect is ideal for sharing:</p> <ul class="svelte-cbyphw"><li class="svelte-cbyphw">Quick thoughts and ideas</li> <li class="svelte-cbyphw">Documentation snippets</li> <li class="svelte-cbyphw">Meeting notes</li> <li class="svelte-cbyphw">Code explanations</li> <li class="svelte-cbyphw">Personal reflections</li> <li class="svelte-cbyphw">Any text you want to format and share</li></ul></div> <div class="section svelte-cbyphw"><h3 class="svelte-cbyphw">üîí Privacy & Security</h3> <p class="svelte-cbyphw">Your content is never stored on our servers. Everything is:</p> <ul class="svelte-cbyphw"><li class="svelte-cbyphw"><strong>Client-side:</strong> Processed entirely in your browser</li> <li class="svelte-cbyphw"><strong>Link-based:</strong> Content lives only in the URL you share</li> <li class="svelte-cbyphw"><strong>No tracking:</strong> We don\'t collect or store your data</li> <li class="svelte-cbyphw"><strong>Instant:</strong> No accounts or setup required</li></ul></div></div> <div class="popup-footer svelte-cbyphw"><button class="got-it-btn svelte-cbyphw" type="button">Got it!</button></div></div></div>');function Le(v,w){V(w,!1);const s=me();let a=y();ye(()=>{e(a)&&e(a).focus()});function p(){s("close")}function d(b){b.target===b.currentTarget&&p()}function u(b){b.key==="Escape"&&p()}Z();var n=Ce(),j=i(n),h=i(j),P=r(i(h),2);o(h);var E=r(h,4),z=i(E);o(E),o(j),o(n),fe(n,b=>c(a,b),()=>e(a)),g("click",P,p),g("click",z,p),g("click",n,d),g("keydown",n,u),k(v,n),X()}const m={maxCharacters:parseInt("1200"),appName:"Reflect",appDescription:"Share your thoughts in markdown format"};var $e=x('<span class="remaining svelte-1mzht5j"> </span>'),Ee=x('<div class="link-section svelte-1mzht5j"><h3 class="svelte-1mzht5j">Your shareable link:</h3> <div class="link-container svelte-1mzht5j"><input type="text" readonly="" class="link-input svelte-1mzht5j"/> <button class="copy-btn svelte-1mzht5j">Copy</button></div> <p class="link-info svelte-1mzht5j">Anyone with this link can view your rendered markdown</p></div>'),Ne=x('<div class="copy-notification svelte-1mzht5j">‚úÖ Link copied to clipboard!</div>'),Te=x('<div class="preview-section svelte-1mzht5j"><h3 class="svelte-1mzht5j">Preview:</h3> <div class="preview-content svelte-1mzht5j"><!></div></div>'),Me=x('<main class="container svelte-1mzht5j"><div class="header svelte-1mzht5j"><div class="logo-container svelte-1mzht5j"><img src="/logo.png" class="logo svelte-1mzht5j"/> <h1 class="svelte-1mzht5j"> </h1></div> <p class="svelte-1mzht5j"> </p> <button class="learn-more-btn svelte-1mzht5j">Learn More</button></div> <div class="input-section svelte-1mzht5j"><div class="input-header svelte-1mzht5j"><label for="markdown-input" class="svelte-1mzht5j"> </label> <span> <!></span></div> <textarea id="markdown-input" placeholder="Write your markdown here...  Example: # Hello World This is **bold** and *italic* text. - List item 1 - List item 2" rows="8" class="svelte-1mzht5j"></textarea> <button class="generate-btn svelte-1mzht5j">Generate Link</button></div> <!> <!> <!> <!></main>');function Ge(v,w){V(w,!1);let s=y(""),a=y(""),p=y(""),d=y(0),u=y(!1),n=y(!1),j=y([]);const h=m.maxCharacters;function P(){if(e(s).trim()){const t=btoa(unescape(encodeURIComponent(e(s))));c(a,`${window.location.origin}/#/view/${t}`),c(p,e(s))}}async function E(){try{await navigator.clipboard.writeText(e(a)),c(u,!0),setTimeout(()=>{c(u,!1)},2e3)}catch(t){console.error("Failed to copy: ",t);const l=document.createElement("textarea");l.value=e(a),document.body.appendChild(l),l.select(),document.execCommand("copy"),document.body.removeChild(l),c(u,!0),setTimeout(()=>{c(u,!1)},2e3)}}G(()=>e(s),()=>{c(d,e(s).length)}),G(()=>(e(s),J),()=>{c(j,e(s).trim()?J(e(s)):[])}),G(()=>(e(a),e(p),e(s)),()=>{e(a)&&e(p)&&e(s)!==e(p)&&(c(a,""),c(p,""))}),de(),Z();var z=Me();we(t=>{T(()=>he.title=`${M(m),_(()=>m.appName)??""} - Share Your Thoughts`)});var b=i(z),R=i(b),Y=i(R),D=r(Y,2),ee=i(D,!0);o(D),o(R);var S=r(R,2),te=i(S,!0);o(S);var se=r(S,2);o(b);var U=r(b,2),W=i(U),A=i(W),ae=i(A);o(A);var I=r(A,2),F=i(I),le=r(F);{var ie=t=>{var l=$e(),f=i(l);o(l),T(()=>L(f,`(${h-e(d)} remaining)`)),k(t,l)};$(le,t=>{e(d)>0&&t(ie)})}o(I),o(W);var N=r(W,2);ue(N);var H=r(N,2);o(U);var q=r(U,2);{var oe=t=>{var l=Ee(),f=r(i(l),2),C=i(f);_e(C);var pe=r(C,2);o(f),be(2),o(l),T(()=>ke(C,e(a))),g("click",pe,E),k(t,l)};$(q,t=>{e(a)&&e(s)===e(p)&&t(oe)})}var B=r(q,2);{var re=t=>{var l=Ne();k(t,l)};$(B,t=>{e(u)&&t(re)})}var K=r(B,2);{var ne=t=>{Le(t,{$$events:{close:()=>c(n,!1)}})};$(K,t=>{e(n)&&t(ne)})}var ce=r(K,2);{var ve=t=>{var l=Te(),f=r(i(l),2),C=i(f);xe(C,{get tokens(){return e(j)}}),o(f),o(l),k(t,l)};$(ce,t=>{e(s),_(()=>e(s).trim())&&t(ve)})}o(z),T(t=>{Q(Y,"alt",`${M(m),_(()=>m.appName)??""} Logo`),L(ee,(M(m),_(()=>m.appName))),L(te,(M(m),_(()=>m.appDescription))),L(ae,`Enter your markdown (max ${h??""} characters):`),ze(I,1,`character-count ${e(d)>h?"exceeded":e(d)>h*.8?"warning":""}`,"svelte-1mzht5j"),L(F,`${e(d)??""}/${h??""} `),Q(N,"maxlength",h),H.disabled=t},[()=>(e(s),e(d),_(()=>!e(s).trim()||e(d)>h))]),g("click",se,()=>c(n,!0)),ge(N,()=>e(s),t=>c(s,t)),g("click",H,P),k(v,z),X()}export{Ge as component};
